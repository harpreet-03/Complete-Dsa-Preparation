To store the Nodes of heap in the the array/arraylist:
steps: 

1. give indexes to each node in Left to right manner.
2. according to indexes, place them into an array/arraylist.

Remember: 
1. The root node is at index 0.
2. The left child of a node at index i is at index 2*i+1.
3. The right child of a node at index i is at index 2*i+2.
4. The parent of a node at index i is at index (i-1)/2.


Important: 
1. The heap is a complete binary tree.
2. Implementation of a min/max heap can be done using a class-based structure, but it is less common due to the inefficiency in managing the heap properties. Specifically, using a class-based approach where each node is a separate object can lead to higher overhead, especially when maintaining the heap structure. The process of adding an element into such a tree could take O(N) time in the worst case, due to the need to navigate and manage pointers.

On the other hand, using an array or ArrayList to implement a heap is more efficient. In this approach, elements can be added in O(1) amortized time, and then reheapifying to maintain the heap properties takes O(log N) time. This is because the heap is maintained as a complete binary tree, which allows efficient access and update operations using array indices. Thus, the overall time complexity for inserting an element and maintaining the heap property is O(log N).
