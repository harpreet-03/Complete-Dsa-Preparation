The four pillars of Object-Oriented Programming (OOP) are the fundamental principles that guide the design and implementation of object-oriented systems. They are:

Encapsulation: Encapsulation is defined as the wrapping up of data & methods under a single unit. It also implements data hiding.

Inheritance: Inheritance is a mechanism that allows a new class (subclass or derived class) to inherit properties and behaviors (attributes and methods) from an existing class (base class or super class). It promotes code reusability and the creation of a hierarchy of classes.

Polymorphism: Polymorphism means "many shapes." It allows objects of different classes to be treated as objects of a common superclass. Polymorphism enables methods with the same name to behave differently based on the object's actual type. This concept is realized through method overriding and method overloading.

Abstraction: Abstraction is the process of simplifying complex reality by modeling classes based on their essential properties and behaviors. It involves ignoring irrelevant details and focusing on the essential aspects of an object. Abstraction helps in managing complexity and enables the creation of abstract classes and interfaces.